#ifndef LANGUAGES_H
#define LANGUAGES_H

#include <stdbool.h>

/*
 * This file should handle loading language file(s)
 * and support getting text. Maybe some function to rendering text index on
 * texture with the help of text.h ?
 */

bool lang_init(void);
void lang_close(void);

/**
 * @brief Gets a C string from a language string index.
 * @details Cheap to call, as it's a simple array lookup.
 *  Currently, returned strings are encoded in CP437; this may
 *  not be true in the future, there's been talk of switching to UTF-8.
 * @param id Lang id to translate, from the enum. Example: LangChooseYourPilot
 */
const char *lang_get(int id);

/**
 * @brief Translates a language string range and offset to a C String.
 * @details Cheap to call, as it's a single array lookup.
 * @param LangStr Lang id to translate, from the enum. Example: LangTrainingHelp
 * @param offset into the range, 0 returns the first of the range.
 */
#define lang_get_offset(LangStr, offset) lang_get_offset_impl(LangStr, LangStr##_Last, (offset))
const char *lang_get_offset_impl(int id, int last, int offset);

#define lang_str(enum_variant) enum_variant
#define lang_str_range(enum_variant, count) enum_variant, enum_variant##_Last = enum_variant + (count - 1)

/*! \brief OpenOMF String ID
 *
 * These string IDs are generated by BuildLanguages.cmake from the list in LanguageStrings.cmake,
 * and match the generated .LNG files.
 */
enum
{
    // lang_str(<enum variant>),
    // lang_str_range(<enum variant>, <str count>),
    // The <enum variant> is what's used in the C code to refer to this language string.
    // Specifying a <str count> allows for a range of lang strs to be added under one name

    // strings from OMF 2097
    lang_str_range(LangPilot, 11),
    lang_str_range(LangPilotDescription, 11),
    lang_str_range(LangRobot, 11),
    lang_str_range(LangRobotDescription, 11),
    lang_str_range(LangArena, 5),
    lang_str_range(LangArenaDescription, 5),
    lang_str_range(LangPronoun, 6),
    lang_str(LangNewsroomUnrankedChallengerDialog),
    lang_str_range(LangNewsroomUnrankedChallenger, 2),
    lang_str(LangNewsroomNewChampion),
    lang_str_range(LangNewsroomReport, 48),
    lang_str_range(LangCpuDifficulty, 7),
    lang_str(LangTooPatheticDialog),
    lang_str(LangTooPatheticInsult),
    lang_str_range(LangVsInsult1, 121),
    lang_str_range(LangVsInsult2, 121),
    lang_str_range(LangPlug, 16),
    lang_str(LangPilotStatPower),
    lang_str(LangPilotStatSpeed),
    lang_str(LangPilotStatEndurance),
    lang_str(LangChooseYourPilot),
    lang_str(LangChooseYourRobot),
    lang_str(LangSceneEnd),
    lang_str_range(LangSceneEnd1, 10),
    lang_str_range(LangSceneEnd2, 10),
    lang_str(LangSelectTournament),
    lang_str(LangSelectPhotoForChr),
    lang_str(LangSelectChrToLoad),
    lang_str(LangSelectChrToDelete),
    lang_str(LangSelectOpponent),
    lang_str_range(LangTrainingTitle, 3),
    lang_str_range(LangTrainingConfirmation, 3),
    lang_str_range(LangTrainingHelp, 3),
    lang_str(LangTrainingDone),
    lang_str(LangTradeGainCash),
    lang_str(LangTradeSpendCash),
    lang_str(LangTradeEquitable),
    lang_str(LangButtonSelect),
    lang_str(LangTournamentFight),
    lang_str(LangEnterTrainingHelp),
    lang_str(LangBuyUpgradesHelp),
    lang_str(LangSellUpgradesHelp),
    lang_str(LangChrLoadHelp),
    lang_str(LangChrCreateHelp),
    lang_str(LangChrDeleteHelp),
    lang_str(LangTournamentSimHelp),
    lang_str(LangTournamentQuitHelp),
    lang_str(LangTournamentRegisterHelp),
    lang_str_range(LangTournamentDifficulty, 4),
    lang_str(LangNo),
    lang_str(LangYes),
    lang_str(LangPromptChrName),
    lang_str(LangCustomizeColor1),
    lang_str(LangCustomizeColor2),
    lang_str(LangCustomizeColor3),
    lang_str(LangUpgradePowerSell),
    lang_str(LangUpgradePowerBuy),
    lang_str(LangUpgradeSpeedSell),
    lang_str(LangUpgradeSpeedBuy),
    lang_str(LangUpgradeArmorSell),
    lang_str(LangUpgradeArmorBuy),
    lang_str(LangUpgradeStunResistanceSell),
    lang_str(LangUpgradeStunResistanceBuy),
    lang_str(LangTradeHelp),
    lang_str(LangTradeNoneAvailable),
    lang_str(LangTradeAvailable),
    lang_str(LangUpgradeQuitSell),
    lang_str(LangUpgradeQuitBuy),
    // strings new in OpenOMF
    lang_str(LangLanguage),

    Lang_Count,
};

#undef lang_str
#undef lang_str_range

#endif // LANGUAGES_H
